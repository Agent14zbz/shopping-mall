<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>aaa.zbz</groupId>
    <artifactId>shopping_mall</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <excludes>
                        <exclude>**/log4j.properties</exclude>
                    </excludes>
                    <archive>
                        <!-- 包里面是否包含pom.xml文件和pom.properties文件 -->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>main.MallMain</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--  exclude junit, we need runtime dependency only -->
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ProGuard混淆插件-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>

                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>

                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>

                        <!-- 不路过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>

                        <!--不用大小写混合类名机制-->
                        <option>-dontusemixedcaseclassnames</option>

                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>

                        <!-- 不混淆所有包名-->
                        <!--<option>-keeppackagenames</option>-->

                        <!-- 需要保持的属性：异常，注解等-->
                        <option>-keep public class main.MallMain { public static void main(java.lang.String[]);}
                        </option>
                        <option>-keep public class main.Mall</option>
                        <option>-keep public class main.Mall {public void controlEvent(controlP5.ControlEvent);}</option>
                        <option>-keepattributes
                            Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod
                        </option>

                        <!-- 不混淆所有的set/get方法-->
                        <!--<option>-keepclassmembers public class * {void set*(***);*** get*();}</option>-->

                    </options>

                    <!--class 混淆后输出的jar包-->
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}-pg.jar</outjar>

                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>

                    <!-- 输出目录-->
                    <outputDirectory>E:\AAA_Project\202009_Shuishi\code\target</outputDirectory>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/quil/processing-core -->
        <dependency>
            <groupId>quil</groupId>
            <artifactId>processing-core</artifactId>
            <version>3.5.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/quil/processing-svg -->
        <dependency>
            <groupId>quil</groupId>
            <artifactId>processing-svg</artifactId>
            <version>3.5.4</version>
        </dependency>

        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt-main</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all-main</artifactId>
            <version>2.3.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.locationtech.jts/jts-core -->
        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <version>1.16.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.twak</groupId>
            <artifactId>campskeleton</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>inst.aaa</groupId>
            <artifactId>archijson</artifactId>
            <version>0.1.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.archialgo</groupId>
            <artifactId>camera</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.archialgo</groupId>
            <artifactId>HE_Mesh-maven-lib</artifactId>
            <version>2019.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.archialgo</groupId>
            <artifactId>iGeo-maven-lib</artifactId>
            <version>0.9.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.archialgo</groupId>
            <artifactId>controlp5-maven-lib</artifactId>
            <version>2.2.6</version>
        </dependency>

        <dependency>
            <groupId>org.github.zhangbz764</groupId>
            <artifactId>ztools</artifactId>
            <version>0.1.4</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>clojars.org</id>
            <url>https://clojars.org/repo/</url>
        </repository>
    </repositories>


</project>